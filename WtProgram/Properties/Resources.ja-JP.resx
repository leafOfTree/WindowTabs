<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Appearance" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="Background Active" xml:space="preserve">
    <value>背景(アクティブ)</value>
  </data>
  <data name="Background Flash" xml:space="preserve">
    <value>背景(点滅)</value>
  </data>
  <data name="Background Highlight" xml:space="preserve">
    <value>背景(ハイライト)</value>
  </data>
  <data name="Background Normal" xml:space="preserve">
    <value>背景(通常)</value>
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>動作</value>
  </data>
  <data name="Border" xml:space="preserve">
    <value>枠線</value>
  </data>
  <data name="CloseWindowTabs" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="combineIconsInTaskbar" xml:space="preserve">
    <value>タスクバーのアイコンをまとめる</value>
  </data>
  <data name="Diagnostics" xml:space="preserve">
    <value>Diagnostics(未訳)</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="enableAutoGrouping" xml:space="preserve">
    <value>自動グループ化</value>
  </data>
  <data name="enableTabs" xml:space="preserve">
    <value>タブ</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>フィードバック</value>
  </data>
  <data name="groupWindowsInSwitcher" xml:space="preserve">
    <value>タスク切替でウィンドウをグループ化する</value>
  </data>
  <data name="enableCtrlNumberHotKey" xml:space="preserve">
    <value>Ctrl+1、... Ctrl+9 でタブをアクティブ化を有効にする</value>
  </data>
  <data name="enableHoverActivate" xml:space="preserve">
    <value>マウスホバーでタブを有効にする</value>
  </data>
  <data name="enableShiftScroll" xml:space="preserve">
    <value>タブ切り替えに Shift+スクロール を使用可能にする</value>
  </data>
  <data name="autoHide" xml:space="preserve">
    <value>最大化時にタブを自動的に隠す</value>
  </data>
  <data name="alignment" xml:space="preserve">
    <value>タブの配置</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="hideInactiveTabs" xml:space="preserve">
    <value>非アクティブウィンドウのタブを隠す</value>
  </data>
  <data name="Indent Flipped" xml:space="preserve">
    <value>インデント(Flipped)</value>
  </data>
  <data name="Indent Normal" xml:space="preserve">
    <value>インデント(通常)</value>
  </data>
  <data name="isTabbingEnabledForAllProcessesByDefault" xml:space="preserve">
    <value>全てのプログラムでタブを使う</value>
  </data>
  <data name="MatchType" xml:space="preserve">
    <value>一致区分</value>
  </data>
  <data name="Max Width" xml:space="preserve">
    <value>最長幅</value>
  </data>
  <data name="Text Color" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>新規</value>
  </data>
  <data name="nextTab" xml:space="preserve">
    <value>次のタブ</value>
  </data>
  <data name="Overlap" xml:space="preserve">
    <value>Overlap</value>
  </data>
  <data name="prevTab" xml:space="preserve">
    <value>前のタブ</value>
  </data>
  <data name="Programs" xml:space="preserve">
    <value>プログラム</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="replaceAltTab" xml:space="preserve">
    <value>ALT+TABをWindowTabsのタスク切替で使う</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="runAtStartup" xml:space="preserve">
    <value>電源投入時にWindowTabsを起動</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="Workspace" xml:space="preserve">
    <value>ワークスペース</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Segoe UI</value>
  </data>
</root>
